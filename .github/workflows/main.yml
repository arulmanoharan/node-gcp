name: Deploy to Google Cloud Run with Terraform

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Action Yes/No'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node_version: [14]
        region: [asia-east1] 

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node_version }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
        
    - name: Configure Docker to use the gcloud credential helper
      run: gcloud auth configure-docker -q

    - name: Build and push Docker image to GCR
      run: |
        export IMAGE_NAME=gcr.io/${{ secrets.GCP_PROJECT_ID }}/node_app
        docker buildx build -t $IMAGE_NAME .
        docker tag $IMAGE_NAME $IMAGE_NAME:$GITHUB_SHA
        docker push $IMAGE_NAME:$GITHUB_SHA
        docker push $IMAGE_NAME:latest

    - name: Save image details to output
      id: image-details
      run: echo "::set-output name=image_name::${IMAGE_NAME}"
      env:
        IMAGE_NAME: $IMAGE_NAME

  manual-approval:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Manual approval
      id: approve
      run: echo "Approve deployment"
    
  deploy-terraform:
    runs-on: ubuntu-latest
    needs: manual-approval
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: latest

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Deploy to Google Cloud Run with Terraform
      run: |
        terraform init
        terraform apply -auto-approve -var="region=${{ matrix.region }}" -var="image=${{ needs.deploy.outputs.image_name }}"

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GITHUB_SHA: ${{ github.sha }}
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
